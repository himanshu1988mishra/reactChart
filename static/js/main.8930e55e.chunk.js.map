{"version":3,"sources":["components/charts/Chart.js","App.js","index.js"],"names":["Chart2","props","result","App","useState","optionValue","setOptionValue","barDatasets","label","data","backgroundColor","chartData","labels","datasets","options","plugins","title","display","text","align","padding","top","bottom","legend","position","scales","yAxes","ticks","min","max","stepSize","borderColor","tension","className","name","id","value","onChange","e","target","Chart","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NASeA,EAPA,SAACC,GAAa,OACzB,8BACGA,EAAMC,U,OC+HEC,MA9Hf,WACE,IAAID,EAAS,GACb,EAAsCE,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KA4BMC,EAAc,CAClB,CACEC,MAAO,iBACPC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BC,gBAAiB,CACf,oBACA,oBACA,sBAGJ,CACEF,MAAO,kBACPC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BC,gBAAiB,CACf,oBACA,oBACA,sBAGJ,CACEF,MAAO,8BACPC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BC,gBAAiB,CACf,sBACA,sBACA,yBAIAC,EAAY,CAChBC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3BC,SAAU,IAGNC,EAAU,CACdC,QAAS,CACPC,MAAO,CACLC,SAAS,EACTC,KAAM,2BACNC,MAAO,QACPC,QAAS,CACPC,IAAK,GACLC,OAAQ,KAGZC,OAAQ,CACNN,SAAS,EACTO,SAAU,UAEZC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,IAAK,EACLC,IAAK,GACLC,SAAU,SAuBtB,MAdoB,SAAhBzB,GACFM,EAAUE,SAAV,UAxFmB,CACnB,CACEL,MAAO,iBACPC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BC,gBAAiB,OACjBqB,YAAa,oBACbC,QAAS,IAEX,CACExB,MAAO,kBACPC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BC,gBAAiB,OACjBqB,YAAa,oBACbC,QAAS,IAEX,CACExB,MAAO,8BACPC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BC,gBAAiB,OACjBqB,YAAa,uBACbC,QAAS,MAqEX9B,EAAS,cAAC,IAAD,CAAMO,KAAME,EAAWG,QAASA,KAChB,QAAhBT,GACTM,EAAUE,SAAV,UAAyBN,GACzBL,EAAS,cAAC,IAAD,CAAKO,KAAME,EAAWG,QAASA,KACf,QAAhBT,GACTM,EAAUE,SAAV,UAAyBN,GACzBL,EAAS,cAAC,IAAD,CAAUO,KAAME,EAAWG,QAASA,KAE7CZ,EAAS,GAKT,0BAAS+B,UAAU,MAAnB,UACE,8BACE,yBAAQC,KAAK,GAAGC,GAAG,GAAGC,MAAO/B,EAAagC,SA5G3B,SAACC,GACpBhC,EAAegC,EAAEC,OAAOH,QA2GpB,UACE,wBAAQA,MAAM,GAAd,+BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,2BAIJ,yBAASH,UAAU,QAAnB,SACE,cAACO,EAAD,CAAOtC,OAAQA,UCxHvBuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8930e55e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Chart2 = (props) => {  return (\r\n    <div>\r\n      {props.result}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart2","import { useState } from 'react'\nimport './App.css'\nimport Chart from './components/charts/Chart'\nimport { Line, Bar, Doughnut } from 'react-chartjs-2'\n\nfunction App() {\n  let result = ''\n  const [optionValue, setOptionValue] = useState('')\n  const handleChange = (e) => {\n    setOptionValue(e.target.value)\n\n  }\n  const lineDatasets = [\n    {\n      label: 'Current Actual',\n      data: [65, 50, 83, 75, 45, 40, 30],\n      backgroundColor: '#fff',\n      borderColor: 'rgba(255,0,0,0.5)',\n      tension: 0.4,\n    },\n    {\n      label: 'Previous Period',\n      data: [35, 45, 40, 20, 80, 25, 85],\n      backgroundColor: '#fff',\n      borderColor: 'rgba(0,0,255,0.5)',\n      tension: 0.4,\n    },\n    {\n      label: 'Upcoming Period - No Bezier',\n      data: [45, 20, 40, 60, 35, 15, 75],\n      backgroundColor: '#fff',\n      borderColor: 'rgba(255,255,0, 0.5)',\n      tension: 0.4,\n    }\n  ]\n  const barDatasets = [\n    {\n      label: 'Current Actual',\n      data: [65, 50, 83, 75, 45, 40, 30],\n      backgroundColor: [\n        'rgba(255,0,0,0.5)',\n        'rgba(255,0,0,0.5)',\n        'rgba(255,0,0,0.5)'\n      ],\n    },\n    {\n      label: 'Previous Period',\n      data: [35, 45, 40, 20, 80, 25, 85],\n      backgroundColor: [\n        'rgba(0,0,255,0.5)',\n        'rgba(0,0,255,0.5)',\n        'rgba(0,0,255,0.5)'\n      ],\n    },\n    {\n      label: 'Upcoming Period - No Bezier',\n      data: [45, 20, 40, 60, 35, 15, 75],\n      backgroundColor: [\n        'rgba(255,255,0,0.5)',\n        'rgba(255,255,0,0.5)',\n        'rgba(255,255,0,0.5)'\n      ],\n    }\n  ]\n  const chartData = {\n    labels: [1, 2, 3, 4, 5, 6, 7],\n    datasets: []\n  }\n\n  const options = {\n    plugins: {\n      title: {\n        display: true,\n        text: 'Toyota Daily Retail Sale',\n        align: 'start',\n        padding: {\n          top: 20,\n          bottom: 30\n        }\n      },\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              min: 0,\n              max: 10,\n              stepSize: 10\n            }\n          }\n        ]\n      }\n    }\n  }\n\n  // selection logic\n  if (optionValue === 'line') {\n    chartData.datasets = [...lineDatasets]\n    result = <Line data={chartData} options={options} />\n  } else if (optionValue === 'bar') {\n    chartData.datasets = [...barDatasets]\n    result = <Bar data={chartData} options={options} />\n  } else if (optionValue === 'pie') {\n    chartData.datasets = [...barDatasets]\n    result = <Doughnut data={chartData} options={options} />\n  } else {\n    result = ''\n  }\n  \n\n  return (\n    <section className=\"App\">\n      <div>\n        <select name=\"\" id=\"\" value={optionValue} onChange={handleChange}>\n          <option value=\"\">Select Chart Type</option>\n          <option value=\"line\">Line</option>\n          <option value=\"bar\">Bar</option>\n          <option value=\"pie\">Doughnut</option>\n        </select>\n      </div>\n\n      <article className=\"chart\">\n        <Chart result={result} />\n      </article>\n    </section>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}