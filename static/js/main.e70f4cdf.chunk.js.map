{"version":3,"sources":["components/charts/Chart.js","App.js","index.js"],"names":["Chart2","props","result","App","useState","optionValue","setOptionValue","lineDatasets","label","data","backgroundColor","borderColor","tension","barDatasets","chartData","labels","datasets","options","reponsive","scales","xAxes","grid","display","title","text","yAxes","plugins","align","padding","top","bottom","legend","position","className","name","id","value","onChange","e","target","Chart","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NASeA,EAPA,SAACC,GAAa,OACzB,8BACGA,EAAMC,U,OCyIEC,MAxIf,WACE,IAAID,EAAS,GACb,EAAsCE,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAIMC,EAAe,CACnB,CACEC,MAAO,iBACPC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BC,gBAAiB,OACjBC,YAAa,oBACbC,QAAS,IAEX,CACEJ,MAAO,kBACPC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BC,gBAAiB,OACjBC,YAAa,oBACbC,QAAS,IAEX,CACEJ,MAAO,8BACPC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BC,gBAAiB,OACjBC,YAAa,uBACbC,QAAS,KAGPC,EAAc,CAClB,CACEL,MAAO,iBACPC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BC,gBAAiB,CACf,oBACA,oBACA,sBAGJ,CACEF,MAAO,kBACPC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BC,gBAAiB,CACf,oBACA,oBACA,sBAGJ,CACEF,MAAO,8BACPC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BC,gBAAiB,CACf,sBACA,sBACA,yBAIAI,EAAY,CAChBC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3BC,SAAU,IAGNC,EAAU,CACdC,WAAW,EACXC,OAAQ,CACNC,MAAO,CACLC,KAAM,CACJC,SAAS,GAEXC,MAAO,CACLD,SAAS,EACTE,KAAM,WAGVC,MAAO,CACLJ,KAAM,CACJC,SAAS,GAEXC,MAAO,CACLD,SAAS,EACTE,KAAM,YAIZE,QAAS,CACPH,MAAO,CACLD,SAAS,EACTE,KAAM,2BACNG,MAAO,QACPC,QAAS,CACPC,IAAK,GACLC,OAAQ,KAGZC,OAAQ,CACNT,SAAS,EACTU,SAAU,YAqBhB,MAfoB,SAAhB3B,GACFS,EAAUE,SAAV,UAAyBT,GACzBL,EAAS,cAAC,IAAD,CAAMO,KAAMK,EAAWG,QAASA,KAChB,QAAhBZ,GACTS,EAAUE,SAAV,UAAyBH,GACzBX,EAAS,cAAC,IAAD,CAAKO,KAAMK,EAAWG,QAASA,KACf,QAAhBZ,GACTS,EAAUE,SAAV,UAAyBH,GACzBX,EAAS,cAAC,IAAD,CAAUO,KAAMK,EAAWG,QAASA,MAE7CH,EAAUE,SAAV,UAAyBT,GACzBL,EAAS,cAAC,IAAD,CAAMO,KAAMK,EAAWG,QAASA,KAKzC,0BAASgB,UAAU,MAAnB,UACE,8BACE,yBAAQC,KAAK,GAAGC,GAAG,GAAGC,MAAO/B,EAAagC,SArH3B,SAACC,GAAD,OAAOhC,EAAegC,EAAEC,OAAOH,QAqH9C,UACE,wBAAQA,MAAM,GAAd,+BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,2BAIJ,yBAASH,UAAU,QAAnB,SACE,cAACO,EAAD,CAAOtC,OAAQA,UClIvBuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e70f4cdf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Chart2 = (props) => {  return (\r\n    <div>\r\n      {props.result}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart2","import { useState } from 'react'\nimport './App.css'\nimport Chart from './components/charts/Chart'\nimport { Line, Bar, Doughnut, Pie } from 'react-chartjs-2'\n\nfunction App() {\n  let result = ''\n  const [optionValue, setOptionValue] = useState('')\n\n  const handleChange = (e) => setOptionValue(e.target.value)\n\n  const lineDatasets = [\n    {\n      label: 'Current Actual',\n      data: [65, 50, 83, 75, 45, 40, 30],\n      backgroundColor: '#fff',\n      borderColor: 'rgba(255,0,0,0.5)',\n      tension: 0.4,\n    },\n    {\n      label: 'Previous Period',\n      data: [35, 45, 40, 20, 80, 25, 85],\n      backgroundColor: '#fff',\n      borderColor: 'rgba(0,0,255,0.5)',\n      tension: 0.4,\n    },\n    {\n      label: 'Upcoming Period - No Bezier',\n      data: [45, 20, 40, 60, 35, 15, 75],\n      backgroundColor: '#fff',\n      borderColor: 'rgba(255,255,0, 0.5)',\n      tension: 0.4,\n    }\n  ]\n  const barDatasets = [\n    {\n      label: 'Current Actual',\n      data: [65, 50, 83, 75, 45, 40, 30],\n      backgroundColor: [\n        'rgba(255,0,0,0.5)',\n        'rgba(255,0,0,0.5)',\n        'rgba(255,0,0,0.5)'\n      ],\n    },\n    {\n      label: 'Previous Period',\n      data: [35, 45, 40, 20, 80, 25, 85],\n      backgroundColor: [\n        'rgba(0,0,255,0.5)',\n        'rgba(0,0,255,0.5)',\n        'rgba(0,0,255,0.5)'\n      ],\n    },\n    {\n      label: 'Upcoming Period - No Bezier',\n      data: [45, 20, 40, 60, 35, 15, 75],\n      backgroundColor: [\n        'rgba(255,255,0,0.5)',\n        'rgba(255,255,0,0.5)',\n        'rgba(255,255,0,0.5)'\n      ],\n    }\n  ]\n  const chartData = {\n    labels: [1, 2, 3, 4, 5, 6, 7],\n    datasets: []\n  }\n\n  const options = {\n    reponsive: true,\n    scales: {\n      xAxes: {\n        grid: {\n          display: false\n        },\n        title: {\n          display: true,\n          text: 'Months'\n        }\n      },\n      yAxes: {\n        grid: {\n          display: false\n        },\n        title: {\n          display: true,\n          text: 'Values'\n        }\n      },\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: 'Toyota Daily Retail Sale',\n        align: 'start',\n        padding: {\n          top: 20,\n          bottom: 30\n        }\n      },\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n    }\n  }\n\n  // selection logic\n  if (optionValue === 'line') {\n    chartData.datasets = [...lineDatasets]\n    result = <Line data={chartData} options={options} />\n  } else if (optionValue === 'bar') {\n    chartData.datasets = [...barDatasets]\n    result = <Bar data={chartData} options={options} />\n  } else if (optionValue === 'pie') {\n    chartData.datasets = [...barDatasets]\n    result = <Doughnut data={chartData} options={options} />\n  } else {\n    chartData.datasets = [...lineDatasets]\n    result = <Line data={chartData} options={options} />\n  }\n\n\n  return (\n    <section className=\"App\">\n      <div>\n        <select name=\"\" id=\"\" value={optionValue} onChange={handleChange}>\n          <option value=\"\">Select Chart Type</option>\n          <option value=\"line\">Line</option>\n          <option value=\"bar\">Bar</option>\n          <option value=\"pie\">Doughnut</option>\n        </select>\n      </div>\n\n      <article className=\"chart\">\n        <Chart result={result} />\n      </article>\n    </section>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}